[PYTHON]
from flask import Flask, render_template, request, redirect, url_for, jsonify
from flask_sqlalchemy import SQLAlchemy
import os

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///questions.db'
db = SQLAlchemy(app)

class Question(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    description = db.Column(db.String(200), nullable=False)
    answers = db.Column(db.ARRAY(db.String), nullable=False)
    selected_answer = db.Column(db.Integer, nullable=False)

    def __repr__(self):
        return f"Question('{self.title}', '{self.description}', '{self.answers}', '{self.selected_answer}')"

@app.route('/', methods=['GET', 'POST'])
def home():
    if request.method == 'POST':
        title = request.form['title']
        description = request.form['description']
        answers = request.form.getlist('answers[]')
        selected_answer = request.form['selected_answer']
        question = Question(title=title, description=description, answers=answers, selected_answer=selected_answer)
        db.session.add(question)
        db.session.commit()
        return redirect(url_for('home'))
    else:
        questions = Question.query.all()
        return render_template('home.html', questions=questions)

@app.route('/question/<int:question_id>', methods=['GET', 'POST'])
def question(question_id):
    question = Question.query.get(question_id)
    if request.method == 'POST':
        selected_answer = request.form['selected_answer']
        question.selected_answer = selected_answer
        db.session.commit()
        return redirect(url_for('home'))
    else:
        return render_template('question.html', question=question)

@app.route('/add_question', methods=['GET', 'POST'])
def add_question():
    if request.method == 'POST':
        title = request.form['title']
        description = request.form['description']
        answers = request.form.getlist('answers[]')
        selected_answer = request.form['selected_answer']
        question = Question(title=title, description=description, answers=answers, selected_answer=selected_answer)
        db.session.add(question)
        db.session.commit()
        return redirect(url_for('home'))
    else:
        return render_template('add_question.html')

if __name__ == '__main__':
    db.create_all()
    app.run(debug=True)
[/PYTHON]